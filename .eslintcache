[{"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\index.js":"1","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\App.js":"2","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\reportWebVitals.js":"3","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\commnt.js":"4","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\index.js":"5","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\main.js":"6","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\detail.js":"7","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\gap.js":"8","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\top.id.js":"9","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\default.hash.js":"10","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\top.hashtag.js":"11","C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\post.log.js":"12"},{"size":617,"mtime":1611569875925,"results":"13","hashOfConfig":"14"},{"size":590,"mtime":1611623488243,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":769,"mtime":1611629376321,"results":"17","hashOfConfig":"14"},{"size":376,"mtime":1611626118827,"results":"18","hashOfConfig":"14"},{"size":5929,"mtime":1611640622806,"results":"19","hashOfConfig":"14"},{"size":5883,"mtime":1611651797985,"results":"20","hashOfConfig":"14"},{"size":1238,"mtime":1611651426713,"results":"21","hashOfConfig":"14"},{"size":577,"mtime":1611650716237,"results":"22","hashOfConfig":"14"},{"size":3307,"mtime":1611652893439,"results":"23","hashOfConfig":"14"},{"size":405,"mtime":1611651522084,"results":"24","hashOfConfig":"14"},{"size":231,"mtime":1611651033660,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e188pt",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\index.js",[],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\App.js",[],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\reportWebVitals.js",[],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\commnt.js",["52","53","54"],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\index.js",[],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\main.js",["55","56","57"],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\detail.js",["58","59"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Gap from \"./gap\";\r\nimport TopHash from \"./top.hashtag\";\r\n\r\nconst Detatil = (props) => {\r\n\r\n    const fileName = props.match.params.id+'.json';\r\n\r\n    const [ view, setView ] = useState();\r\n\r\n    const [days, setDays] = useState('lately_popular');\r\n\r\n    useEffect(async () => {\r\n        \r\n        let data = null;\r\n\r\n        const url = './hotseller-dataset/pretty/hashtag_info/'+fileName; console.log(url);\r\n\r\n        await axios.get(url).then(res => {\r\n            data = res.data;\r\n\r\n            if(data?.result !== undefined){\r\n                delete data.result;    \r\n            }\r\n    \r\n            const keys = Object.keys(data);\r\n    \r\n            let result = {};\r\n            result.info = data.info;\r\n            result.top_autocomplete = data.top_autocomplete;\r\n            \r\n            const resultKey = Object.keys(result);\r\n    \r\n            const filter = keys.filter(val => !resultKey.includes(val));\r\n    \r\n            result.keys = filter;\r\n    \r\n            for(let i=0; i<keys.length; i++){\r\n                if(keys[i].indexOf(days) > -1){\r\n                    result.gap = data[keys[i]];\r\n                }\r\n            }\r\n    \r\n            setView(result);\r\n\r\n        }).catch(e => {\r\n            console.log(e);\r\n        });\r\n\r\n        \r\n    }, [days]);\r\n\r\n    const changeDays = (state) => {\r\n\r\n        setDays(state);\r\n    }\r\n\r\n    const backHandler = () => {\r\n        console.log(props.history);\r\n        props.history.go(-1);\r\n    }\r\n\r\n    console.log(view?.keys);\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                ((view) => {\r\n                    console.log(view);\r\n\r\n                    if(view !== undefined){\r\n                        return(\r\n                            <div>\r\n                                <h2 style={{textAlign:'left'}}>\r\n                                    {view.info?.hashtag} <span>{view.info?.post_cnt}</span>\r\n                                </h2>\r\n                                <span>베스트 해쉬태그</span><br></br>\r\n                                {\r\n                                    \r\n                                    view?.top_autocomplete !== undefined ? \r\n                                        view?.top_autocomplete.map((value, index) => {\r\n                                            return(\r\n                                                <TopHash value={value}></TopHash>\r\n                                            )\r\n                                            \r\n                                        })\r\n                                        : '로딩'\r\n                                }\r\n\r\n                                <br></br>\r\n                                <div className=\"button-group\">\r\n                                {\r\n                                    view?.keys !== undefined ? view?.keys.map((value, index) => {\r\n                                        return(\r\n                                            <div style={{'display':'inline'}} className=\"button-slide\" onClick={() => changeDays(value)}>\r\n                                                <span>{value}</span>\r\n                                            </div>\r\n                                        )\r\n                                    }) : '로딩'\r\n                                }\r\n                                </div>\r\n                                {\r\n                                    days === undefined ? '로딩' : \r\n                                    ((keys) => {\r\n                                        console.log(keys);\r\n                                        if(keys === 'top_relation'){\r\n                                            return(\r\n                                                <h2>연관 해쉬</h2>\r\n                                            )\r\n                                        }else{\r\n                                            if(keys.indexOf('top_id') > -1){\r\n                                                return(\r\n                                                    <h2>탑 아이디</h2>\r\n                                                )\r\n                                            }else if(keys === 'post_log'){\r\n                                                return(\r\n                                                    <h2>태그 로그</h2>\r\n                                                )\r\n                                            }else{\r\n                                                return(\r\n                                                    <h2>회원 상태</h2>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    })(days)\r\n                                }\r\n\r\n                                {\r\n                                    view?.gap !== undefined ? view?.gap.map((value, index) => {\r\n                                        return(\r\n                                            <Gap value={value} keys={days}></Gap>\r\n                                        )\r\n                                    }) : '로딩'\r\n                                }\r\n                                <br></br>\r\n                                <button onClick={() => backHandler()}>뒤로가기</button>\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                        return(\r\n                            <div>\r\n                                <h3>해당하는 데이터가 없습니다.</h3>\r\n                                <button onClick={() => backHandler()}>뒤로가기</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                })(view)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Detatil;",["60","61"],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\gap.js",[],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\top.id.js",[],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\default.hash.js",[],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\top.hashtag.js",["62"],"C:\\Users\\Bdapps\\Downloads\\hotseller-dataset\\src\\component\\main\\post.log.js",[],{"ruleId":"63","severity":1,"message":"64","line":16,"column":12,"nodeType":"65","messageId":"66","endLine":16,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":21,"column":49,"nodeType":"65","messageId":"69","endLine":21,"endColumn":50},{"ruleId":"67","severity":1,"message":"68","line":21,"column":55,"nodeType":"65","messageId":"69","endLine":21,"endColumn":56},{"ruleId":"70","severity":1,"message":"71","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":14,"column":15,"nodeType":"76","endLine":42,"endColumn":6},{"ruleId":"74","severity":1,"message":"77","line":16,"column":93,"nodeType":"78","endLine":16,"endColumn":101},{"ruleId":"74","severity":1,"message":"75","line":14,"column":15,"nodeType":"76","endLine":52,"endColumn":6},{"ruleId":"74","severity":1,"message":"79","line":52,"column":8,"nodeType":"80","endLine":52,"endColumn":14,"suggestions":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"70","severity":1,"message":"86","line":5,"column":11,"nodeType":"72","messageId":"73","endLine":5,"endColumn":15},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'trend' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has a missing dependency: 'fileName'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"'keys' is assigned a value but never used.",{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [days, fileName]",{"range":"92","text":"93"},[1352,1358],"[days, fileName]"]